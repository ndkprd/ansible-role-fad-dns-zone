---

- name: Update/create FortiADC resources.
  hosts: all
  become: false
  gather_facts: false
  connection: local
  vars:
     # for testing-purpose only, to delete the created resources after. change to 'false' or override from --extra-vars if you want it to stay.
    do_cleanup: true
    # global-load-balance data-center entries
    fad_glb_data_centers:
      - name: dc1.ndkprd.com
        location: ID
    # global-load-balance servers entries
    fad_glb_servers:
      - name: "dmz.dc1.ndkprd.com"
        data_center: "dc1.ndkprd.com"
        health_check_ctrl: enable
        health_check_list: "LB_HLTHCK_ICMP "
        health_check_relationship: OR
        server_type: Generic-Host
        auth_type: none
        address_type: ipv4 # FAD address type
        auto_sync: disable
        fad_ipv4: "0.0.0.0"
        fad_ipv6: "::"
        fad_pass: ""
        fad_port: "5858"
        server_members:
          - name: public-waf-1.dc1.ndkprd.com
            ipv4: 10.10.1.1
            ipv6: "::"
            address_type: ipv4
            gateway: ""
            health_check_ctrl: disable
            health_check_inherit: enable
            health_check_list: ""
            health_check_relationship: "OR"
    # global-load-balance virtual-server-pool entries
    fad_glb_vs_pools:
      - name: public-waf.dc1.ndkprd.com # VS Pools mkey
        check_server_status: enable # healthcheck
        check_virtual_server_existent: disable
        load_balance_method: wrr
        vs_pool_members:
          - id: 1001 # high number of ID for mkey
            is_backup: disable # if enable, when healthcheck failed it will goes to this server
            server: dmz.dc1.ndkprd.com # GLB Servers
            server_member_name: public-waf-1.dc1.ndkprd.com # GLB Servers member
            weight: 10
    # global-dns-server policy entry
    fad_dns_policy:
      - name: "PUBLIC_DNS_POLICY" # Global DNS Policy mkey
        source_address: "any" # valid Address Group entry mkey used as source
        destination_address: "any" # valid Address Group entry used as destination
        dns64_list: ""
        dnssec_validate_status: "disable" # "enable" or "disable"
        forward: "first" # "first" or "only"
        forwarders: "" # valid Remote DNS Servers entry mkey
        recursion_status: "disable" # "enable" or "disable"
        rrlimit: "" # valid Response Rate Limit 
    # global-dns-server zone policy
    fad_dns_zones:
      - name: "primary_infra.ndkprd.com" # base domain without dot, will be converted to the mkey by task
        type: "primary"
        domain_name: infra.ndkprd.com
        dns_policy: "PUBLIC_DNS_POLICY" # valid DNS Policy mkey
        ttl: "86400" # zone's time-to-live
        negative_ttl: "3600" # zone's negative time-to-live
        primary_ns_ipv4: "10.10.10.2" # primary IPv4 nameserver
        primary_ns_ipv6: "::" # primary IPv6 nameserver
        primary_ns_name: "ns" # primary nameserver hostname
        responsible_mail: "admin" #responsible mail, use dot if include domain
        allow_transfer: "" # valid Address Group mkey
        a_aaaa_record:
          - hostname: ns # hostname
            id: "1001" # high ID to be used as mkey
            ipv4: "10.10.10.2" # ip to be resolved to
            ipv6: "::"
            ttl: "-1" # time-to-live, will inherit zone if "-1"
            source_type: "ipv4" # or ipv6
        caa_records:
          - id: 1001 # high ID to be used as mkey
            flag: 0 # time
            hostname: "@"
            tag: issuewild
            ttl: -1
            value: letsencrypt.com
        cname_records:
          - id: 1001
            alias: wwww
            target: "@"
            ttl: "-1"
        mx_records:
          - id: 1001
            domain_name: "@"
            hostname: mail
            ipv4: 10.10.10.11
            priority: 10
        ns_records:
          - id: 1001
            domain_name: "@"
            hostname: ns
            ipv4: 10.10.10.10
        ptr_records:
          - id: 1001
            fqdn: ndkprd.com.
            ptr_address: 10.10.10.19
            ttl: "-1"
        srv_records:
          - id: 1001
            hostname: "@"
            port: 80
            priority: 0
            targetname: www
            ttl: -1
            weight: 1
        txt_records:
          - id: 1001
            name: "@"
            text: randomtext
    # global-dns-server general
    fad_dns_general_settings:
      global_dns_mode: "enable"
      certificate: "Factory"
      dnssec_validate_status: "disable"
      doh_interface_list: ""
      doh_port: "80"
      doh_status: "disable"
      dohs_interface_list: ""
      dohs_port: "443"
      dohs_status: "disable"
      dot_interface_list: ""
      dot_port: "853"
      dot_status: "disable"
      forward: "first"
      forwarders: ""
      interface_list: ""
      ipv4_mode: "enable"
      ipv6_mode: "disable"
      listen_to_all_interface: "enable"
      recursion_status: "disable"
      response_ratelimit: ""
      traffic_log: "enable"
      use_system_dns_server: "enable"


  roles:
    - ndkprd.fad_dns_zone

  tasks:
    - name: Clean up tasks.
      block:

        - name: Clean up the created root GLB Host resources.
          vars: 
            fad_glb_host_api_endpoint: "{{ fad_base_url + fad_api_endpoint.glb_host }}"
          ansible.builtin.uri:
            method: DELETE
            url: "{{ fad_glb_host_api_endpoint | format(dns_zone.name) }}"
            body_format: "{{ fad_api_uri_params.body_format }}"
            validate_certs: "{{ fad_api_uri_params.validate_certs }}"
            return_content: "{{ fad_api_uri_params.return_content }}"
            status_code: "{{ fad_api_uri_params.status_code }}"
            headers: "{{ fad_api_header }}"
          register: fad_dns_zone_post_results
          loop: "{{ fad_dns_zones }}"
          loop_control:
            loop_var: dns_zone
            label: "{{ dns_zone.name }}"
          when: do_cleanup
          tags: [cleanup, fad_dns_zones]

        - name: Clean up the created DNS Server zone resources.
          ansible.builtin.uri:
            method: DELETE
            url: "https://{{ ansible_host }}/api/global_dns_server_zone?vdom={{ fad_vdom }}&mkey={{ item.name }}"
            body_format: "{{ fad_api_uri_params.body_format }}"
            validate_certs: "{{ fad_api_uri_params.validate_certs }}"
            return_content: "{{ fad_api_uri_params.return_content }}"
            status_code: "{{ fad_api_uri_params.status_code }}"
            headers: "{{ fad_api_header }}"
          when: do_cleanup
          loop: "{{ fad_dns_zones }}"
          loop_control:
            label: "{{ item.name }}"
          tags: [cleanup, fad_dns_zones]
