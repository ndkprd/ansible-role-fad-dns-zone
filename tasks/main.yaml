---
# ./tasks/main.yaml

- name: Generate FortiADC global-load-balance root host to automatically create fqdn_generate zone.
  ansible.builtin.uri:
    method: POST
    url: "https://{{ ansible_host }}/api/global_load_balance_host?vdom={{ fad_vdom }}"
    body_format: json
    validate_certs: false
    return_content: yes
    status_code: 200
    headers:
      'Content-Type': 'application/json'
      'APITOKEN': '{{ fad_apitoken }}'
    body: |
      {
        "default-feedback-ip": "0.0.0.0",
        "default-feedback-ip6": "",
        "domain-name": "{{ item.name }}.",
        "fortiview": "enable",
        "host-name": "@",
        "load-balance-method": "",
        "mkey": "{{ item.scope }}_{{ item.name }}",
        "persistence": "disable",
        "respond-single-record": "enable",
        "vs_pool_list": "",
        "vs_pool_list_count": ""
      }
  register: glb_host_data
  delegate_to: localhost
  when: "'fortiadc' in group_names"
  changed_when: "glb_host_data.json.payload == 0"
  loop: "{{ fad_domains }}"

- name: Get the existing value of the FAD DNS Policy zone list.
  ansible.builtin.uri:
    method: GET
    url: "https://{{ ansible_host }}/api/global_dns_server_policy?vdom={{ fad_vdom }}&mkey={{ fad_dns_policy.name }}"
    body_format: json
    validate_certs: false
    return_content: yes
    status_code: 200
    headers:
      'Content-Type': 'application/json'
      'APITOKEN': '{{ fad_apitoken }}'
  register: dns_policy_data
  delegate_to: localhost
  when: "'fortiadc' in group_names"

- name: Print out the existing value of the FAD DNS Policy zone list.
  ansible.builtin.debug:
    var: dns_policy_data.json.payload.zone_list
  tags:
    - debug

- name: Set the new zone list value.
  ansible.builtin.set_fact:
    new_zone_list: "{{ dns_policy_data.json.payload.zone_list }}fqdn_generate_{{ item.name }}. "
  when: "'fortiadc' in group_names"
  loop: "{{ fad_domains }}"

- name: Print out the new zone list created by Ansible.
  ansible.builtin.debug:
    var: new_zone_list
  tags:
    - debug

- name: Update the FortiADC DNS policy zone list.
  ansible.builtin.uri:
    method: PUT
    url: "https://{{ ansible_host }}/api/global_dns_server_policy?vdom={{ fad_vdom }}&mkey={{ fad_dns_policy.name }}"
    body_format: json
    validate_certs: false
    return_content: yes
    status_code: 200
    headers:
      'Content-Type': 'application/json'
      'APITOKEN': '{{ fad_apitoken }}'
    body: |
      {
        "zone_list": "{{ new_zone_list }}"
      }
  delegate_to: localhost
  register: dns_policy_move_result
  when: "'fortiadc' in group_names"
  #changed_when: "dns_policy_move_result.json.payload == 0"

- name: Get the new zone list value from FortiADC.
  ansible.builtin.uri:
    method: GET
    url: "https://{{ ansible_host }}/api/global_dns_server_policy?vdom={{ fad_vdom }}&mkey={{ fad_dns_policy.name }}"
    body_format: json
    validate_certs: false
    return_content: yes
    status_code: 200
    headers:
      'Content-Type': 'application/json'
      'APITOKEN': '{{ fad_apitoken }}'
  register: dns_policy_data_new
  delegate_to: localhost
  when: "'fortiadc' in group_names"
  tags:
    - debug

- name: Print out the new zone list in the FortiADC DNS Policy.
  ansible.builtin.debug:
    var: dns_policy_data_new.json.payload.zone_list
  tags:
    - debug
