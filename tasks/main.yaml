---
# ./tasks/main.yaml

- name: Generate FortiADC global-load-balance root host to automatically create fqdn_generate zone.
  ansible.builtin.uri:
    method: POST
    url: "https://{{ ansible_host }}/api/global_load_balance_host?vdom={{ fad_vdom }}"
    body_format: json
    validate_certs: false
    return_content: yes
    status_code: 200
    headers:
      'Content-Type': 'application/json'
      'APITOKEN': '{{ fad_apitoken }}'
    body: |
      {
        "default-feedback-ip": "0.0.0.0",
        "default-feedback-ip6": "",
        "domain-name": "{{ item.name }}.",
        "fortiview": "enable",
        "host-name": "@",
        "load-balance-method": "",
        "mkey": "{{ item.scope }}_{{ item.name }}",
        "persistence": "disable",
        "respond-single-record": "enable",
        "vs_pool_list": "",
        "vs_pool_list_count": ""
      }
  register: glb_host_data
  delegate_to: localhost
  when: "'fortiadc' in group_names"
  changed_when: "glb_host_data.json.payload == 0"
  loop: "{{ domain_entries }}"

#- name: Print out the whole response.
  #debug:
    #var: data.json

#- name: Print out the value of the payload response.
  #debug:
    #var: data.json.payload.zone_list

- name: Get the value of DEFAULT_DNS_POLICY zone list.
  ansible.builtin.uri:
    method: GET
    url: "https://{{ ansible_host }}/api/global_dns_server_policy?vdom={{ fad_vdom }}&mkey=DEFAULT_DNS_POLICY"
    body_format: json
    validate_certs: false
    return_content: yes
    status_code: 200
    headers:
      'Content-Type': 'application/json'
      'APITOKEN': '{{ fad_apitoken }}'
  register: dns_policy_data
  delegate_to: localhost
  when: "'fortiadc' in group_names"

- name: Print out the whole response.
  debug:
    var: dns_policy_data.json

- name: Get the zone list.
  debug:
    var: dns_policy_data.json.payload.zone_list

- name: Set the new zone list value.
  ansible.builtin.set_fact:
    new_zone_list: "{{ dns_policy_data.json.payload.zone_list }}fqdn_generate_{{ item.name }}. "
  when: "'fortiadc' in group_names"
  loop: "{{ domain_entries }}"

- name: Print out the new zone list.
  debug:
    var: new_zone_list

- name: Move the generated fqdn_generate zone to their policy.
  ansible.builtin.uri:
    method: PUT
    url: "https://{{ ansible_host }}/api/global_dns_server_policy?vdom={{ fad_vdom }}&mkey=DEFAULT_DNS_POLICY"
    body_format: json
    validate_certs: false
    return_content: yes
    status_code: 200
    headers:
      'Content-Type': 'application/json'
      'APITOKEN': '{{ fad_apitoken }}'
    body: |
      {
        "zone_list": "{{ new_zone_list }}"
      }
  delegate_to: localhost
  register: dns_policy_move_result
  when: "'fortiadc' in group_names"
  changed_when: "dns_policy_move_result.json.payload == 0"


- name: Print out the new zone list value from FortiADC.
  ansible.builtin.uri:
    method: GET
    url: "https://{{ ansible_host }}/api/global_dns_server_policy?vdom={{ fad_vdom }}&mkey=DEFAULT_DNS_POLICY"
    body_format: json
    validate_certs: false
    return_content: yes
    status_code: 200
    headers:
      'Content-Type': 'application/json'
      'APITOKEN': '{{ fad_apitoken }}'
  register: dns_policy_data_new
  delegate_to: localhost
  when: "'fortiadc' in group_names"

- name: Get the zone list.
  debug:
    var: dns_policy_data_new.json.payload.zone_list
